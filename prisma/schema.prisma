generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model counselor {
  counselorId Int     @id @default(autoincrement())
  userId      Int     @unique(map: "Counselor_userId_key")
  isDeleted   Boolean @default(false)
  user        user    @relation(fields: [userId], references: [id], map: "Counselor_userId_fkey")
}

model student {
  studentId      Int              @id @default(autoincrement())
  userId         Int              @unique(map: "Student_userId_key")
  college        String
  program        String
  year           Int
  birthDate      DateTime
  contactNumber  String
  address        String
  isDeleted      Boolean          @default(false)
  user           user             @relation(fields: [userId], references: [id], map: "Student_userId_fkey")
  studenthistory studenthistory[]
}

model teacher {
  teacherId Int     @id @default(autoincrement())
  userId    Int     @unique(map: "Teacher_userId_key")
  college   String
  isDeleted Boolean @default(false)
  user      user    @relation(fields: [userId], references: [id], map: "Teacher_userId_fkey")
}

model user {
  id                 Int        @id @default(autoincrement())
  institutionalEmail String     @unique(map: "User_institutionalEmail_key")
  idNumber           String     @unique(map: "User_idNumber_key")
  firstName          String
  middleName         String
  lastName           String
  gender             String
  password           String
  dateOfCreation     DateTime   @default(now())
  isDeleted          Boolean    @default(false)
  calendar           calendar[]
  counselor          counselor?
  inquiry            inquiry[]
  referral           referral[]
  student            student?
  teacher            teacher?
}

model appointment {
  appointmentId   Int      @id @default(autoincrement())
  purpose         String
  date            DateTime
  timeStart       DateTime
  timeEnd         DateTime
  additionalNotes String?
  status          Boolean
  notes           String?
  calendarId      Int
  isDeleted       Boolean  @default(false)
  calendar        calendar @relation(fields: [calendarId], references: [calendarId], map: "Appointment_calendarId_fkey")

  @@index([calendarId], map: "Appointment_calendarId_fkey")
}

model calendar {
  calendarId  Int           @id @default(autoincrement())
  userId      Int
  isDeleted   Boolean       @default(false)
  appointment appointment[]
  user        user          @relation(fields: [userId], references: [id], map: "Calendar_userId_fkey")
  event       event[]

  @@index([userId], map: "Calendar_userId_fkey")
}

model event {
  eventId      Int      @id @default(autoincrement())
  eventName    String
  type         String
  location     String
  eventDetails String
  date         DateTime
  timeStart    DateTime
  timeEnd      DateTime
  calendarId   Int
  isDeleted    Boolean  @default(false)
  calendar     calendar @relation(fields: [calendarId], references: [calendarId], map: "Event_calendarId_fkey")

  @@index([calendarId], map: "Event_calendarId_fkey")
}

model inquiry {
  inquiryId Int      @id @default(autoincrement())
  sender    Int
  subject   String
  status    String
  date      DateTime
  time      DateTime
  isDeleted Boolean  @default(false)
  user      user     @relation(fields: [sender], references: [id], map: "Inquiry_sender_fkey")

  @@index([sender], map: "Inquiry_sender_fkey")
}

model journal {
  journalId   Int      @id @default(autoincrement())
  title       String
  entry       String
  dateOfEntry DateTime
  isDeleted   Boolean  @default(false)
}

model referral {
  referralId      Int     @id @default(autoincrement())
  idNumber        String
  name            String
  referredBy      Int
  reason          String
  additionalNotes String?
  isDeleted       Boolean @default(false)
  user            user    @relation(fields: [referredBy], references: [id], map: "Referral_referredBy_fkey")

  @@index([referredBy], map: "Referral_referredBy_fkey")
}

model studenthistory {
  studentRecordId Int     @id @default(autoincrement())
  name            String
  email           String
  idNumber        String
  program         String
  year            Int
  contactNumber   String
  studentId       Int
  isDeleted       Boolean @default(false)
  student         student @relation(fields: [studentId], references: [studentId], map: "StudentHistory_studentId_fkey")

  @@index([studentId], map: "StudentHistory_studentId_fkey")
}

model post {
  postId           Int       @id @default(autoincrement())
  blogId           Int?
  posts            String?   @db.Text
  title            String?   @db.VarChar(255)
  shortDescription String?   @db.Text
  blogURL          String?   @db.VarChar(255)
  author           String?   @db.VarChar(255)
  publishDate      DateTime? @db.DateTime(0)
  image            String?   @db.VarChar(1024)
  datePosted       DateTime? @default(now()) @db.DateTime(0)
  isdeleted        Boolean?  @default(false)
}
