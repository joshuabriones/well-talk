generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model counselor {
  counselorId Int  @id @default(autoincrement())
  userId      Int  @unique(map: "Counselor_userId_key")
  user        user @relation(fields: [userId], references: [id], map: "Counselor_userId_fkey")
}

model student {
  studentId     Int      @id @default(autoincrement())
  userId        Int      @unique(map: "Student_userId_key")
  college       String
  program       String
  year          Int
  birthDate     DateTime
  contactNumber String
  address       String
  user          user     @relation(fields: [userId], references: [id], map: "Student_userId_fkey")
}

model teacher {
  teacherId Int    @id @default(autoincrement())
  userId    Int    @unique(map: "Teacher_userId_key")
  college   String
  user      user   @relation(fields: [userId], references: [id], map: "Teacher_userId_fkey")
}

model user {
  id                 Int        @id @default(autoincrement())
  institutionalEmail String     @unique(map: "User_institutionalEmail_key")
  idNumber           String     @unique(map: "User_idNumber_key")
  firstName          String
  middleName         String
  lastName           String
  gender             String
  password           String
  dateOfCreation     DateTime   @default(now())
  counselor          counselor?
  student            student?
  teacher            teacher?
}

model post {
  postId           Int      @id @default(autoincrement())
  blogId           Int
  posts            String   @db.Text
  title            String   @db.VarChar(255)
  shortDescription String   @db.Text
  blogURL          String   @db.VarChar(255)
  author           String   @db.VarChar(255)
  publishDate      DateTime @db.DateTime(0)
  image            Bytes?   @db.Blob
  datePosted       DateTime @default(now()) @db.DateTime(0)
  isdeleted        Boolean  @default(false)
}
